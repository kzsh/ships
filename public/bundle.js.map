{"version":3,"file":"bundle.js","sources":["../src/entities/index.js","../src/game.js","../src/renderer.js","../src/update.js","../src/main.js"],"sourcesContent":["const { abs, max, min, random } = Math\nlet id = 2\nconst G = 1\n\nexport const player = {\n  id: 1,\n  data: {},\n  update: (tick, e1, entities, keysDown) => {\n    if(!e1) return\n    for (const e2 of entities) {\n      if(!e2) break;\n      if (e1.id !== e2.id) {\n        const [w, h, dist] = gravitate(e1, e2)\n        bounce(e1, e2, dist, entities)\n        e1.data.dist = dist\n        e1.data.h = h\n        e1.data.w = w\n\n      }\n    }\n    const ay = keysDown[\"ArrowDown\"]\n      ? 0.1\n      : keysDown[\"ArrowUp\"]\n      ? -0.1\n      : 0;\n    const ax = keysDown[\"ArrowLeft\"]\n      ? -0.1\n      : keysDown[\"ArrowRight\"]\n      ? 0.1\n      : 0;\n\n    e1.dx = e1.dx + ax;\n    e1.dy = e1.dy + ay;\n\n    e1.x = e1.x + e1.dx;\n    e1.y = e1.y + e1.dy;\n  },\n  mass: 50,\n  radius: 10,\n  x: 300,\n  y: 300,\n  dx: 2,\n  dy: 1,\n}\n\nexport const makeCircle = (\n  x,\n  y,\n  mass = 1,\n  radius = 10,\n  dx = Math.random() * 2 -1,\n  dy = Math.random() * 2 -1\n) => ({\n  id: id++,\n  data: {},\n  update: (tick, e1, entities, keysDown) => {\n    if(!e1) return\n\n    if(abs(e1.x) > 2000 || abs(e1.y) > 2000 ) {\n      destroyEntity(entities, e1)\n      return\n    }\n\n    if (e1.radius <= 1 && e1.mass <= 0.1){\n      destroyEntity(entities, e1)\n      return\n    }\n\n    for (const e2 of entities) {\n      if(!e2) break;\n      if (e1.id !== e2.id) {\n        const [,, dist] = gravitate(e1, e2)\n        bounce(e1, e2, dist, entities)\n      }\n    }\n\n    e1.x = e1.x + e1.dx;\n    e1.y = e1.y + e1.dy;\n  },\n  mass,\n  radius,\n  x,\n  y,\n  dx,\n  dy,\n})\n\nconst gravitate = (e1, e2) => {\n  const w = (e2.x - e1.x)\n  const h = (e2.y - e1.y)\n  const distance = getDistance(e1, e2)\n  const attraction = newtonsLawOfUniversalGravitation(e1.mass, e2.mass, distance)\n  const { x, y } = getAttractionComponents(e1, e2, attraction)\n  e1.dx += x\n  e1.dy += y\n  return [w, h, distance]\n}\n\nconst newtonsLawOfUniversalGravitation = (mass1, mass2, distance) => {\n const force = G * ((mass1 * mass2) / distance ** 2) ;\n const attraction1 = force / mass1;\n return attraction1;\n};\n\nconst getDistance = (e1, e2) => {\n const a = Math.abs(e2.x - e1.x);\n const b = Math.abs(e2.y - e1.y);\n return Math.sqrt(a ** 2 + b ** 2);\n};\n\nconst getAttractionComponents = (e1, e2, attraction) => {\n  const direction = Math.atan2(e2.x - e1.x, e2.y - e1.y);\n  const x = Math.sin(direction) * attraction;\n  const y = Math.cos(direction) * attraction;\n\n  return {\n    x,\n    y\n  }\n}\n\nconst log = (x) => (console.log(x), x)\n\nconst bounce = (e1, e2, dist, entities) => {\n  if((dist - e1.radius - e2.radius) <= 0) {\n    const distance = getDistance(e1, e2)\n    const attraction = newtonsLawOfUniversalGravitation(e1.mass, e2.mass, distance)\n    const attraction2 = newtonsLawOfUniversalGravitation(e2.mass, e1.mass, distance)\n    const { x: x1, y: y1 } = getAttractionComponents(e1, e2, attraction * -1)\n    const { x: x2, y: y2 } = getAttractionComponents(e1, e2, attraction2)\n    e1.dx += x1\n    e1.dy += y1\n    e2.dx += x2\n    e2.dy += y2\n\n    const MASS_EXCHANGE = 0.1\n    const RADIUS_EXCHANGE = 0.1\n    if (e1.mass > e2.mass && e2.mass > 0.01 && e2.radius > 0) {\n      transferAttr(e2, e1, 'mass', MASS_EXCHANGE)\n      transferAttr(e2, e1, 'radius', RADIUS_EXCHANGE)\n      doRandom(0.2, () => {\n        e2.mass -= 0.5\n        e2.radius -= 0.1\n        entities.push(\n          makeCircle(\n            e2.x + e2.radius * 2.5 * random() - e2.radius,\n            e2.y + e2.radius * 2.5 * random() - e2.radius,\n            e2.mass * 0.01,\n            e2.radius * 0.01,\n            x1 * -4,\n            y1 * -4\n          )\n        )\n      })\n    } else if(e1.mass < e2.mass && e1.mass > 0.01 && e1.radius > 0.01) {\n      transferAttr(e1, e2, 'mass', MASS_EXCHANGE)\n      transferAttr(e1, e2, 'radius', RADIUS_EXCHANGE)\n      doRandom(0.9, () => {\n        e1.mass -= 0.5\n        e1.radius -= 0.1\n        entities.push(\n          makeCircle(\n            e1.x + e1.radius * 2.5 * random() - e1.radius,\n            e1.y + e1.radius * 2.5 * random() - e1.radius,\n            e1.mass * 0.01,\n            e1.radius * 0.01,\n            x2 * -4,\n            y2 * -4\n          )\n        )\n      })\n    }\n\n    // if(distance - e2.radius < e1.radius/2) {\n    //   destroyEntity(entities, e1)\n    // }\n    // if(distance - e1.radius < e2.radius/2) {\n    //   destroyEntity(entities, e2)\n    // }\n\n    // destroySmallEntity(entities, e1)\n    // destroySmallEntity(entities, e2)\n  }\n}\n\n\nconst transferAttr = (e1, e2, attr, qty) =>{\n  e1[attr] -= qty;\n  e2[attr] += qty\n}\n\nconst doRandom = (threshold, action) => {\n  random() < threshold && action()\n}\n\nconst destroySmallEntity = (entities, e1) => {\n  if (e1.mass <= 0.1 || e1.radius <= 0.1) {\n    destroyEntity(entities, e1)\n  }\n}\n\nconst destroyEntity = (entities, e1) => {\n  entities[entities.indexOf(e1)] = undefined\n}\n","import { makeCircle, player } from './entities'\nexport const createGame = () => {\n  const entities = [\n    player,\n    makeCircle(\n      500,\n      500,\n      1000,\n      50\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    ),\n    makeCircle(\n      1000 * Math.random() + 10,\n      1000 * Math.random() + 10,\n      Math.random() * 30,\n      Math.random() * 20\n    )\n]\n\n  const game = {\n    entities,\n    player\n  };\n\n  const update = (tick, keysDown) => {\n    // game.entities = game.entities.filter(e => !!e)\n    game.entities = game.entities.filter(Boolean)\n    // game.entities = game.entities.slice(0, game.entities.indexOf(undefined))\n    game.entities.forEach((e) => e?.update(tick, e, game.entities, keysDown));\n    return game;\n  };\n\n  return [game, update];\n};\n","\nimport { player } from \"./entities\"\n\nexport const render = ({ entities }, context) => {\n  const len = entities.length;\n  const style = context.strokeStyle;\n\n  renderText(context, len, {x:28, y: 28})\n  for(let x = 0; x < len; x++) {\n    const e = entities[x];\n    if(!e) break;\n\n    drawEntity(context, e)\n\n      lineBetweenEntities(context, e, {\n        x: e.x + e.dx * 5,\n        y: e.y + e.dy * 5\n      }, { color: \"#F00\" })\n\n    if(player && e.id !== player.id) {\n      // lineBetweenEntities(context, e, player)\n\n\n      // lineBetweenEntities(context, player, {\n      //   x: player.x + e.data.w,\n      //   y: player.y\n      // })\n      // lineBetweenEntities(context, player, {\n      //   x: player.x,\n      //   y: player.y + e.data.h\n      // })\n    }\n    // renderText(context, e.data.dist?.toFixed(2), {x:e.x + 14, y: e.y})\n    renderText(context, e.dx?.toFixed(2), {x:e.x + 14, y: e.y + 14})\n    renderText(context, e.dy?.toFixed(2), {x:e.x + 14, y: e.y + 28})\n  }\n}\n\n\nconst drawEntity = (context, e1) => {\n  if (e1.radius <=0) return\n  const style = context.strokeStyle;\n  context.beginPath();\n  context.strokeStyle = \"#FFF\";\n  context.arc(e1.x, e1.y, e1.radius, 0, 360);\n  context.stroke();\n  context.strokeStyle = style;\n}\n\nconst lineBetweenEntities = (context, e1, e2, { color } = {color: \"#FFF\"}) => {\n  const style = context.strokeStyle;\n  context.beginPath()\n  context.moveTo(e1.x, e1.y)\n  context.strokeStyle = color;\n  context.lineTo(e2.x, e2.y)\n  context.stroke()\n  context.strokeStyle = style;\n}\n\nconst renderText = (context, text, { x, y }) => {\n  if(text === undefined || text == null) {\n    return\n  }\n  context.beginPath()\n  context.font = '14px serif';\n  context.strokeStyle = \"#FFF\";\n  context.fillStyle = \"#FFF\";\n  context.fillText(text, x, y)\n}\n","import { createGame } from \"./game\";\nimport { render } from \"./renderer\";\nconst TARGET_FPS = 1000 / 20;\nexport function initialize() {\n  const keysDown = {};\n  const canvas = document.createElement(\"canvas\");\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  const context = canvas.getContext(\"2d\");\n  document.body.appendChild(canvas);\n\n  const [game, update] = createGame();\n\n  let lastTime = 0;\n  let lastRender = 0;\n\n  const performFrame = (time = 0) => {\n    const tick = time - lastTime;\n\n    lastRender = lastRender + tick;\n    if (lastRender > TARGET_FPS) {\n      update(tick, keysDown);\n      context.clearRect(0, 0, canvas.width, canvas.height);\n      render(game, context);\n      lastRender = 0;\n    }\n\n    lastTime = time;\n    window.requestAnimationFrame(performFrame);\n  };\n  const KEYS = [\n    \"ArrowDown\",\n    \"ArrowUp\",\n    \"ArrowLeft\",\n    \"ArrowRight\"\n  ]\n  document.addEventListener(\"keydown\", (e) => {\n    if(KEYS.includes(e.key)) {\n      e.preventDefault();\n      keysDown[e.key] = true;\n    }\n  });\n  document.addEventListener(\"keyup\", (e) => {\n    if(KEYS.includes(e.key)) {\n      e.preventDefault();\n      keysDown[e.key] = false;\n    }\n  });\n\n  performFrame();\n}\n","import { initialize } from \"./update.js\";\n\ninitialize();\n"],"names":["abs","max","min","random","Math","id","player","data","update","tick","e1","entities","keysDown","e2","w","h","dist","gravitate","bounce","ay","ax","dx","dy","x","y","mass","radius","makeCircle","destroyEntity","distance","getDistance","attraction","newtonsLawOfUniversalGravitation","getAttractionComponents","mass1","mass2","a","b","sqrt","direction","atan2","sin","cos","attraction2","x1","y1","x2","y2","MASS_EXCHANGE","RADIUS_EXCHANGE","transferAttr","doRandom","push","attr","qty","threshold","action","indexOf","undefined","createGame","game","filter","Boolean","forEach","e","render","context","len","length","strokeStyle","renderText","drawEntity","lineBetweenEntities","color","toFixed","style","beginPath","arc","stroke","moveTo","lineTo","text","font","fillStyle","fillText","TARGET_FPS","canvas","document","createElement","width","window","innerWidth","height","innerHeight","getContext","body","appendChild","lastTime","lastRender","performFrame","time","clearRect","requestAnimationFrame","KEYS","addEventListener","includes","key","preventDefault","initialize"],"mappings":"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"}